#!/bin/bash

PROXY_URL="https://papermc.io/ci/job/Waterfall/lastStableBuild/artifact/Waterfall.jar"
PAPER_URL="https://papermc.io/ci/job/Paper-1.16/lastStableBuild/artifact/paperclip.jar"
SERVER_PATH=/srv/mc
SERVER_NAMES=()
START_FILE=start.sh
RAW_START="https://raw.githubusercontent.com/Lordva/minecraft-server-installer/master/start.sh"
LOG_FILE="raw.txt"

eula(){
        read -p "Do you accept the eula ? [yes/no]: " key
                case $key in
                        y ) return 0 ;;
                        Y ) return 0 ;;
                        yes ) return 0 ;;
                        YES ) return 0 ;;
                        Yes ) return 0 ;;
                        * ) return 1 ;;
                esac           
}



if [ "$1" = "-c" ]; then
	if [ "$EUID" -ne 0 ]; then
		echo "-------------------------------------------------"
		echo -e "[ERROR] you need to be root to run this script  |"
		echo "-------------------------------------------------"
		echo "Retry with sudo, if you dont have permission please contact your server administrator"
		exit
	fi
	if (( "$#" == "$2 + 2" )); then
		for ((i = 0 ; i+3 <= $# ; i++)); do
			n=$(($i + 3))
			SERVER_NAMES[$i]+=${!n}
		done
		echo "[LOG] you are creating those servers: ${SERVER_NAMES[*]}"
		sleep 1

		for i in ${SERVER_NAMES[@]}; do
			echo "[LOG] creating folder ${SERVER_PATH:?}/$i"
			mkdir -p ${SERVER_PATH:?}"/"$i
			if [ ! -d ${SERVER_PATH:?}"/"$i ]; then
				echo -e "[ERROR] The creation of ${SERVER_PATH:?}/$i has failed !"
				exit
			else
				echo "[LOG] created ${SERVER_PATH:?}/$i"
				if [ ! -e "paperclip.jar" ]; then
					echo "[LOG] Downloading the latest version of PaperMC"
					wget $PAPER_URL >/dev/null 2>&1
					RESULT=$?
					if [ $RESULT != 0 ]; then
						echo "------------------------------------------------------------"
						echo "[ERROR] failed to download the latest stable build of paper|"
						echo "------------------------------------------------------------"
						echo "cleaning the mess before stoping the script"
						rmdir ${SERVER_PATH:?}"/"$i
						exit
					else
						echo "[LOG] Successfully downloaded the latest Paper build !"
						sleep 1
					fi
				fi

				cp paperclip.jar ${SERVER_PATH:?}"/$i/server.jar"
				
				if [ -e $START_FILE ]; then
					echo "[LOG] $START_FILE exist"
				else
					echo "[LOG] $START_FILE doesn't exist, downloading it from GitHub..."
					wget $RAW_START >> $LOG_FILE
					chmod +x $START_FILE
					if [ ! -x $START_FILE ]; then
						echo "-------------------------------------------------"
						echo "[ERROR] Download has failed / is not executable |"
						echo "-------------------------------------------------"
						rm -rf ${SERVER_PATH:?}"/"$i
						exit
					else
						echo "[Successfully downloaded/chmod the start.sh script from GitHub]"
					fi
				fi
				cp $START_FILE ${SERVER_PATH:?}"/"$i
				echo "[LOG] running the server to generate eula.txt"
				echo "sh ${SERVER_PATH:?}/$i/$START_FILE"
				echo ""
				cd ${SERVER_PATH:?}"/"$i
				sh $START_FILE
				RESULT=$?
				if [ $RESULT != 0 ]; then
					echo "---------------------------------------------"
					echo "[ERROR] $START_FILE could not be executed...|"
					echo "---------------------------------------------"
					echo "cleaning the mess before exit"
					rm -rf ${SERVER_PATH:?}"/"$i
					exit
				fi

				if [ ! -e "eula.txt" ]; then
					echo "---------------------------"
					echo "[ERROR] eula.txt not found|"
					echo "---------------------------"
					echo "cleaning the mess before leaving"
					rm -rf ${SERVER_PATH:?}"/"$i
					exit
				else
					echo "[LOG] eula.txt was successfully generated"
					echo "[LOG] setting eula.txt to True..."
					eula
					RESULT=$?
				fi
				if [ $RESULT != 0 ]; then
					echo "-----------------------------"
					echo "[error] eula wasn't accepted|"
					echo "-----------------------------"
					echo "cleaning mess before leaving"
					rm -rf ${SERVER_PATH:?}"/"$i & exit
				else
					sed -i -e 's/false/true/g' eula.txt
        				RESULT=$?
        				if [ $RESULT != 0 ]; then
                				echo "--------------------------------------"
                				echo "[ERROR] eula could not be set to true|"
                				echo "--------------------------------------"
                				echo "cleaning the mess before leaving"
                				rm -rf ${SERVER_PATH:?}"/"$i & exit
        				else
                				echo "[LOG] eula.txt has been successfully set to True"
        				fi

					echo "[LOG] Restarting server to complete the install"
					echo "[LOG] Installing screen"
					apt install screen -y
					echo "[LOG] starting screen session"
					screen mc-$i -DmS ./start.sh
					sleep
				fi
				if [ $2 -lt 2 ]; then
					echo "[INFO] Only one server, no need for a proxy"
				else

					echo "[LOG] $2 Server installed, configuring $i for proxy"
					sed -i -e 's/bungeecord: false/bungeecord: true/g' spigot.yml
				fi
			fi
			
		done
	else
		echo -e "[ERROR] you must give a name to each servers"
	fi
elif [ "$1" = "-d" ]; then
	echo "this feature has yet to be implemented"
elif [ "$1" = "-u" ]; then
	echo "this feature has yet to be implemented"
elif [ "$1" = "-h" ] || [ "$1" = "-help" ]; then
	echo "help page"
else
	echo -e "[ERROR] Unknow argument, try -h"
fi

